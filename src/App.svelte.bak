<script>
	import firebase from 'firebase/app';
	import "firebase/analytics";
	import "firebase/auth";
	import "firebase/firestore";

	import * as firebaseui from 'firebaseui'
	import 'firebaseui/dist/firebaseui.css'

	const firebaseConfig = {
		apiKey: "AIzaSyCyNa9YxHq3n1Fw0r09H2bZMtzVJ95eZAk",
		authDomain: "dg-invoices.firebaseapp.com",
		databaseURL: "https://dg-invoices-default-rtdb.firebaseio.com",
		projectId: "dg-invoices",
		storageBucket: "dg-invoices.appspot.com",
		messagingSenderId: "439675326689",
		appId: "1:439675326689:web:24bf8e1c9535f78faee7a0",
		measurementId: "G-73VWEZ5VCM"
	};

	firebase.initializeApp(firebaseConfig);

	let ui = new firebaseui.auth.AuthUI(firebase.auth());

	let uiConfig = {
		callbacks: {
			signInSuccessWithAuthResult: function(authResult, redirectUrl) {
				// User successfully signed in.
				// Return type determines whether we continue the redirect automatically
				// or whether we leave that to developer to handle.
				console.log('sign-in success')
				return false;
			},
			uiShown: function() {
				// The widget is rendered.
				// Hide the loader.
				document.getElementById('loader').style.display = 'none';
			}
		},
		// Will use popup for IDP Providers sign-in flow instead of the default, redirect.
		signInFlow: 'popup',
		signInSuccessUrl: '/',
		signInOptions: [
			{
				provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,
				requireDisplayName: false
			},
			{
				// Google provider must be enabled in Firebase Console to support one-tap
				provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,
				// Required to enable ID token credentials for this provider.
				// This can be obtained from the Credentials page of the Google APIs
				// console. Use the same OAuth client ID used for the Google provider
				// configured with GCIP or Firebase Auth.
				clientId: '439675326689-uu4ftscvqr3q6kb7p490mvr59l2q4uev.apps.googleusercontent.com'
			}
		],
		// Enable one-tap sign-in.
		credentialHelper: firebaseui.auth.CredentialHelper.GOOGLE_YOLO,
		// Terms of service url.
		tosUrl: '<your-tos-url>',
		// Privacy policy url.
		privacyPolicyUrl: '<your-privacy-policy-url>'
	};

	ui.start('#firebaseui-auth-container', uiConfig);

</script>

<style>

</style>

<div className="wrapper">
	<!-- The surrounding HTML is left untouched by FirebaseUI.
     Your app may use that space for branding, controls and other customizations.-->
	<h1>Welcome to My Awesome App</h1>
	<div id="firebaseui-auth-container"></div>
	<div id="loader">Loading...</div>

	<a href="#" on:click={()=>ui.signOut()}>LogOut</a>
</div>
